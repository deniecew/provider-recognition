---
title: "shoutoutcard"
format: 
  html:
    css: styles.css
    toc: false
    page-layout: full
    
params:
  npi : "1003201096"
---

## Provider Recognition

```{r}
#| echo: false
#| warning: false 

#load packages----
library(tidytext)
library(tidyverse)
library(janitor)
library(dplyr)
library(gt)


load("C:/Users/4477078/OneDrive - Moffitt Cancer Center/provider_recognition/commentdata.Rdata")

name_filter<-commentdata%>%
  filter(npi_num == params$npi)%>%
  distinct(provider_nm)



```

#### `r name_filter` (NPI: `r params$npi`)

```{r}
#| echo: false
#| warning: false

#run for parameterized data
filter_npi<-commentdata%>%
  filter(npi_num == params$npi)

#separate into first and last name
filter_npi[c('last_nm', 'first_nm' )] <- str_split_fixed(filter_npi$resource_name, ' ', 2)

last_nm <- str_to_title(filter_npi$last_nm)
first_nm <- str_to_title(filter_npi$first_nm)

#look for first or last name in comment, print if it's there
x <- filter_npi$response

y <-str_replace_all(x, " ", "") #remove spaces in response text

filter_npi$check1 <- grepl(last_nm,  y)
filter_npi$check2 <- grepl(first_nm, y)


named_comments <- filter_npi %>%
  filter(check1 == 'TRUE' | check2 == 'TRUE') 

n<- nrow(named_comments)


#Rank Comments
bigrams_separated <- named_comments %>% 
  unnest_tokens(bigram, response, token = "ngrams", n = 2) %>% 
  filter(!is.na(bigram)) %>% 
  separate(bigram, c("word1", "word2"), sep = " ")  

negate_words <- c("not", "without", "no", "can't", "don't", "won't", "never")

bigram_sentiment <- bigrams_separated %>%
  mutate(negated = if_else(word1 %in% negate_words, TRUE, FALSE)) %>% 
  left_join(get_sentiments("afinn"), by = c("word1" = "word")) %>%
  rename(value1 = value) %>% 
  left_join(get_sentiments("afinn"), by = c("word2" = "word")) %>% 
  rename(value2 = value) %>% 
  mutate(value2 = if_else(negated, -value2, value2)) %>% 
  mutate(sentiment = rowSums(select(., value1, value2), na.rm = TRUE)) %>% 
  group_by(survey_id, question_text_latest) %>%
  summarize(total_sentiment = sum(sentiment, na.rm = TRUE)) %>% 
  inner_join(named_comments %>% select(resource_name, npi_num, survey_id, question_text_latest, response), by =
  c("survey_id", "question_text_latest")) %>%
  arrange(resource_name, desc(total_sentiment)) %>%
  ungroup() %>%
  select(response)

comments_all <- filter_npi %>%
  select(response)%>%
  rename('All Positive Comments' = response) %>%
  gt() %>%
  cols_align(align="left",columns = everything())%>%
  tab_options(column_labels.background.color = 'dodgerblue4')%>%
  tab_style(style=cell_text(align="center"),
            locations = cells_column_labels(columns = everything())
            )

  # rename('Provider Specific Positive Comments' = response) %>%
  # gt() %>%
  # cols_align(align="left",columns = everything())%>%
  # tab_options(column_labels.background.color = 'dodgerblue4')%>%
  # tab_style(style=cell_text(align="center"),
  #           locations = cells_column_labels(columns = everything())
  #           )



 #named comments sorted

```

::: shoutout-box
# ðŸŽ‰ Shout-Out! ðŸŽ‰

<!-- **Recipient:** `r name_filter` -->

## **`r name_filter`**

<!-- **Patient Comment:**  -->
`r if (n == 0) "No data available" else if (n==1) bigram_sentiment[1,] else bigram_sentiment[1:2,]`



<!-- Thank you for your exceptional contribution! -->
:::
